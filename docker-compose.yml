version: '3.8'

services:
  # Main Application
  rental-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: rental-management-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=sqlite+aiosqlite:///./app.db
      - REDIS_ENABLED=true
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
    depends_on:
      - redis
    volumes:
      - ./app.db:/app/app.db
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - rental-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rental-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    networks:
      - rental-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  rental-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16