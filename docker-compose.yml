version: '3.8'

services:
  # Main Application
  rental-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: rental-management-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://rental_user:rental_password@postgres:5432/rental_db
      - TEST_DATABASE_URL=postgresql+asyncpg://rental_user:rental_password@postgres:5432/rental_test_db
      - REDIS_ENABLED=true
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - rental-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rental-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=rental_db
      - POSTGRES_USER=rental_user
      - POSTGRES_PASSWORD=rental_password
      - POSTGRES_MULTIPLE_EXTENSIONS=pg_stat_statements,pg_trgm
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - rental-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rental_user -d rental_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rental-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    networks:
      - rental-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  rental-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16