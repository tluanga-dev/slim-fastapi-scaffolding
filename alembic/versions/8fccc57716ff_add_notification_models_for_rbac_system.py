"""Add notification models for RBAC system

Revision ID: 8fccc57716ff
Revises: d4adce55c714
Create Date: 2025-07-10 01:58:38.420845

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite
from app.db.base import UUIDType

# revision identifiers, used by Alembic.
revision = '8fccc57716ff'
down_revision = 'd4adce55c714'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_preferences',
    sa.Column('user_id', UUIDType(length=36), nullable=False, comment='User ID'),
    sa.Column('email_enabled', sa.Boolean(), nullable=False, comment='Email notifications enabled'),
    sa.Column('in_app_enabled', sa.Boolean(), nullable=False, comment='In-app notifications enabled'),
    sa.Column('permission_expiry_days', sa.String(length=50), nullable=True, comment='Days before expiry to notify (JSON array)'),
    sa.Column('high_risk_immediate', sa.Boolean(), nullable=False, comment='Immediate notifications for high-risk permissions'),
    sa.Column('digest_frequency', sa.String(length=20), nullable=False, comment='Digest frequency'),
    sa.Column('quiet_hours_start', sa.DateTime(), nullable=True, comment='Quiet hours start time'),
    sa.Column('quiet_hours_end', sa.DateTime(), nullable=True, comment='Quiet hours end time'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('idx_notification_prefs_digest', 'notification_preferences', ['digest_frequency'], unique=False)
    op.create_index('idx_notification_prefs_email', 'notification_preferences', ['email_enabled'], unique=False)
    op.create_index('idx_notification_prefs_in_app', 'notification_preferences', ['in_app_enabled'], unique=False)
    op.create_index('idx_notification_prefs_user', 'notification_preferences', ['user_id'], unique=False)
    op.create_index(op.f('ix_notification_preferences_is_active'), 'notification_preferences', ['is_active'], unique=False)
    op.create_table('permission_notifications',
    sa.Column('user_id', UUIDType(length=36), nullable=False, comment='User ID'),
    sa.Column('permission_id', UUIDType(length=36), nullable=False, comment='Permission ID'),
    sa.Column('notification_type', sa.String(length=50), nullable=False, comment='Notification type'),
    sa.Column('channel', sa.String(length=20), nullable=False, comment='Notification channel'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='Notification title'),
    sa.Column('message', sa.Text(), nullable=True, comment='Notification message'),
    sa.Column('content', sa.Text(), nullable=True, comment='Full notification content (JSON)'),
    sa.Column('days_ahead', sa.Integer(), nullable=True, comment='Days ahead when sent'),
    sa.Column('is_read', sa.Boolean(), nullable=False, comment='Read status'),
    sa.Column('read_at', sa.DateTime(), nullable=True, comment='Read timestamp'),
    sa.Column('related_user_id', UUIDType(length=36), nullable=True, comment='Related user ID'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_permission_notifications_channel', 'permission_notifications', ['channel'], unique=False)
    op.create_index('idx_permission_notifications_created', 'permission_notifications', ['created_at'], unique=False)
    op.create_index('idx_permission_notifications_days_ahead', 'permission_notifications', ['days_ahead'], unique=False)
    op.create_index('idx_permission_notifications_permission', 'permission_notifications', ['permission_id'], unique=False)
    op.create_index('idx_permission_notifications_read', 'permission_notifications', ['is_read'], unique=False)
    op.create_index('idx_permission_notifications_related_user', 'permission_notifications', ['related_user_id'], unique=False)
    op.create_index('idx_permission_notifications_type', 'permission_notifications', ['notification_type'], unique=False)
    op.create_index('idx_permission_notifications_user', 'permission_notifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_permission_notifications_is_active'), 'permission_notifications', ['is_active'], unique=False)
    op.drop_index('idx_transaction_customer', table_name='transaction_headers')
    op.drop_index('idx_transaction_date', table_name='transaction_headers')
    op.drop_index('idx_transaction_location', table_name='transaction_headers')
    op.drop_index('idx_transaction_number', table_name='transaction_headers')
    op.drop_index('idx_transaction_payment_status', table_name='transaction_headers')
    op.drop_index('idx_transaction_rental_dates', table_name='transaction_headers')
    op.drop_index('idx_transaction_sales_person', table_name='transaction_headers')
    op.drop_index('idx_transaction_status', table_name='transaction_headers')
    op.drop_index('idx_transaction_type', table_name='transaction_headers')
    op.drop_index('ix_transaction_headers_is_active', table_name='transaction_headers')
    op.drop_index('ix_transaction_headers_transaction_number', table_name='transaction_headers')
    op.drop_table('transaction_headers')
    op.drop_index('idx_stock_level_item', table_name='stock_levels')
    op.drop_index('idx_stock_level_item_location', table_name='stock_levels')
    op.drop_index('idx_stock_level_location', table_name='stock_levels')
    op.drop_index('ix_stock_levels_is_active', table_name='stock_levels')
    op.drop_table('stock_levels')
    op.drop_index('idx_rental_return_line_damage_level', table_name='rental_return_lines')
    op.drop_index('idx_rental_return_line_inventory_unit', table_name='rental_return_lines')
    op.drop_index('idx_rental_return_line_return', table_name='rental_return_lines')
    op.drop_index('idx_rental_return_line_status', table_name='rental_return_lines')
    op.drop_index('ix_rental_return_lines_is_active', table_name='rental_return_lines')
    op.drop_table('rental_return_lines')
    op.drop_index('idx_system_setting_category', table_name='system_settings')
    op.drop_index('idx_system_setting_display_order', table_name='system_settings')
    op.drop_index('idx_system_setting_key', table_name='system_settings')
    op.drop_index('idx_system_setting_system', table_name='system_settings')
    op.drop_index('idx_system_setting_type', table_name='system_settings')
    op.drop_index('ix_system_settings_is_active', table_name='system_settings')
    op.drop_index('ix_system_settings_setting_key', table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index('idx_audit_log_action', table_name='audit_logs')
    op.drop_index('idx_audit_log_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_log_entity_id', table_name='audit_logs')
    op.drop_index('idx_audit_log_entity_type', table_name='audit_logs')
    op.drop_index('idx_audit_log_ip_address', table_name='audit_logs')
    op.drop_index('idx_audit_log_session_id', table_name='audit_logs')
    op.drop_index('idx_audit_log_success', table_name='audit_logs')
    op.drop_index('idx_audit_log_user_id', table_name='audit_logs')
    op.drop_index('ix_audit_logs_is_active', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('idx_inspection_report_damage_level', table_name='inspection_reports')
    op.drop_index('idx_inspection_report_date', table_name='inspection_reports')
    op.drop_index('idx_inspection_report_inspected_by', table_name='inspection_reports')
    op.drop_index('idx_inspection_report_inventory_unit', table_name='inspection_reports')
    op.drop_index('idx_inspection_report_return', table_name='inspection_reports')
    op.drop_index('idx_inspection_report_status', table_name='inspection_reports')
    op.drop_index('ix_inspection_reports_is_active', table_name='inspection_reports')
    op.drop_table('inspection_reports')
    op.drop_index('idx_system_alert_created_at', table_name='system_alerts')
    op.drop_index('idx_system_alert_name', table_name='system_alerts')
    op.drop_index('idx_system_alert_severity', table_name='system_alerts')
    op.drop_index('idx_system_alert_severity_status', table_name='system_alerts')
    op.drop_index('idx_system_alert_source', table_name='system_alerts')
    op.drop_index('idx_system_alert_status', table_name='system_alerts')
    op.drop_index('idx_system_alert_type', table_name='system_alerts')
    op.drop_table('system_alerts')
    op.drop_index('idx_transaction_line_inventory_unit', table_name='transaction_lines')
    op.drop_index('idx_transaction_line_item', table_name='transaction_lines')
    op.drop_index('idx_transaction_line_number', table_name='transaction_lines')
    op.drop_index('idx_transaction_line_rental_dates', table_name='transaction_lines')
    op.drop_index('idx_transaction_line_transaction', table_name='transaction_lines')
    op.drop_index('idx_transaction_line_type', table_name='transaction_lines')
    op.drop_index('ix_transaction_lines_is_active', table_name='transaction_lines')
    op.drop_table('transaction_lines')
    op.drop_index('idx_system_backup_completed_at', table_name='system_backups')
    op.drop_index('idx_system_backup_name', table_name='system_backups')
    op.drop_index('idx_system_backup_started_at', table_name='system_backups')
    op.drop_index('idx_system_backup_started_by', table_name='system_backups')
    op.drop_index('idx_system_backup_status', table_name='system_backups')
    op.drop_index('idx_system_backup_type', table_name='system_backups')
    op.drop_index('ix_system_backups_is_active', table_name='system_backups')
    op.drop_table('system_backups')
    op.drop_index('idx_business_metric_category', table_name='business_metrics')
    op.drop_index('idx_business_metric_name', table_name='business_metrics')
    op.drop_index('idx_business_metric_name_date', table_name='business_metrics')
    op.drop_index('idx_business_metric_tracked_date', table_name='business_metrics')
    op.drop_index('idx_business_metric_type', table_name='business_metrics')
    op.drop_index('ix_business_metrics_is_active', table_name='business_metrics')
    op.drop_table('business_metrics')
    op.drop_index('idx_inventory_unit_code', table_name='inventory_units')
    op.drop_index('idx_inventory_unit_condition', table_name='inventory_units')
    op.drop_index('idx_inventory_unit_item', table_name='inventory_units')
    op.drop_index('idx_inventory_unit_location', table_name='inventory_units')
    op.drop_index('idx_inventory_unit_serial', table_name='inventory_units')
    op.drop_index('idx_inventory_unit_status', table_name='inventory_units')
    op.drop_index('ix_inventory_units_is_active', table_name='inventory_units')
    op.drop_index('ix_inventory_units_unit_code', table_name='inventory_units')
    op.drop_table('inventory_units')
    op.drop_index('idx_rental_return_date', table_name='rental_returns')
    op.drop_index('idx_rental_return_expected_date', table_name='rental_returns')
    op.drop_index('idx_rental_return_location', table_name='rental_returns')
    op.drop_index('idx_rental_return_processed_by', table_name='rental_returns')
    op.drop_index('idx_rental_return_status', table_name='rental_returns')
    op.drop_index('idx_rental_return_transaction', table_name='rental_returns')
    op.drop_index('idx_rental_return_type', table_name='rental_returns')
    op.drop_index('ix_rental_returns_is_active', table_name='rental_returns')
    op.drop_table('rental_returns')
    op.drop_index('idx_item_brand', table_name='items')
    op.drop_index('idx_item_category', table_name='items')
    op.drop_index('idx_item_code', table_name='items')
    op.drop_index('idx_item_name', table_name='items')
    op.drop_index('idx_item_status', table_name='items')
    op.drop_index('idx_item_supplier', table_name='items')
    op.drop_index('idx_item_type', table_name='items')
    op.drop_index('ix_items_item_code', table_name='items')
    op.drop_table('items')
    op.drop_index('idx_analytics_report_date_range', table_name='analytics_reports')
    op.drop_index('idx_analytics_report_generated_at', table_name='analytics_reports')
    op.drop_index('idx_analytics_report_generated_by', table_name='analytics_reports')
    op.drop_index('idx_analytics_report_status', table_name='analytics_reports')
    op.drop_index('idx_analytics_report_type', table_name='analytics_reports')
    op.drop_index('ix_analytics_reports_is_active', table_name='analytics_reports')
    op.drop_table('analytics_reports')
    op.drop_index('idx_customers_created', table_name='customers')
    op.drop_index('idx_customers_email', table_name='customers')
    op.drop_index('idx_customers_phone', table_name='customers')
    op.drop_index('idx_customers_status', table_name='customers')
    op.drop_index('idx_customers_type', table_name='customers')
    op.drop_index('idx_customers_type_status', table_name='customers')
    op.create_index('idx_permission_category_code', 'permission_categories', ['code'], unique=False)
    op.create_index('idx_permission_category_name', 'permission_categories', ['name'], unique=False)
    op.create_index('idx_permission_category_order', 'permission_categories', ['display_order'], unique=False)
    op.create_index(op.f('ix_permission_categories_code'), 'permission_categories', ['code'], unique=True)
    op.create_index(op.f('ix_permission_categories_is_active'), 'permission_categories', ['is_active'], unique=False)
    op.create_index('idx_permission_deps_depends', 'permission_dependencies', ['depends_on_id'], unique=False)
    op.create_index('idx_permission_deps_perm', 'permission_dependencies', ['permission_id'], unique=False)
    op.create_index(op.f('ix_permission_dependencies_is_active'), 'permission_dependencies', ['is_active'], unique=False)
    op.create_index('idx_permission_category', 'permissions', ['category_id'], unique=False)
    op.create_index('idx_permission_code', 'permissions', ['code'], unique=False)
    op.create_index('idx_permission_requires_approval', 'permissions', ['requires_approval'], unique=False)
    op.create_index('idx_permission_risk_level', 'permissions', ['risk_level'], unique=False)
    op.create_index(op.f('ix_permissions_code'), 'permissions', ['code'], unique=True)
    op.create_foreign_key(None, 'permissions', 'permission_categories', ['category_id'], ['id'])
    op.create_index('idx_rbac_audit_action', 'rbac_audit_logs', ['action'], unique=False)
    op.create_index('idx_rbac_audit_entity_id', 'rbac_audit_logs', ['entity_id'], unique=False)
    op.create_index('idx_rbac_audit_entity_type', 'rbac_audit_logs', ['entity_type'], unique=False)
    op.create_index('idx_rbac_audit_ip', 'rbac_audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_rbac_audit_success', 'rbac_audit_logs', ['success'], unique=False)
    op.create_index('idx_rbac_audit_timestamp', 'rbac_audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_rbac_audit_user', 'rbac_audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_rbac_audit_logs_is_active'), 'rbac_audit_logs', ['is_active'], unique=False)
    op.create_index('idx_role_hierarchy_child', 'role_hierarchy', ['child_role_id'], unique=False)
    op.create_index('idx_role_hierarchy_parent', 'role_hierarchy', ['parent_role_id'], unique=False)
    op.create_index('idx_role_can_delete', 'roles', ['can_be_deleted'], unique=False)
    op.create_index('idx_role_parent', 'roles', ['parent_role_id'], unique=False)
    op.create_index('idx_role_template', 'roles', ['template'], unique=False)
    op.create_foreign_key(None, 'roles', 'roles', ['parent_role_id'], ['id'])
    op.drop_index('idx_suppliers_status', table_name='suppliers')
    op.drop_index('idx_suppliers_type', table_name='suppliers')
    op.create_index('idx_user_permissions_expires', 'user_permissions', ['expires_at'], unique=False)
    op.create_index('idx_user_permissions_permission', 'user_permissions', ['permission_id'], unique=False)
    op.create_index('idx_user_permissions_user', 'user_permissions', ['user_id'], unique=False)
    op.drop_index('idx_users_created', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_status', table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.create_index('idx_user_email_verified', 'users', ['email_verified'], unique=False)
    op.create_index('idx_user_superuser', 'users', ['is_superuser'], unique=False)
    op.create_index('idx_user_user_type', 'users', ['user_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_user_type', table_name='users')
    op.drop_index('idx_user_superuser', table_name='users')
    op.drop_index('idx_user_email_verified', table_name='users')
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index('idx_users_status', 'users', ['is_active'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_created', 'users', ['created_at'], unique=False)
    op.drop_index('idx_user_permissions_user', table_name='user_permissions')
    op.drop_index('idx_user_permissions_permission', table_name='user_permissions')
    op.drop_index('idx_user_permissions_expires', table_name='user_permissions')
    op.create_index('idx_suppliers_type', 'suppliers', ['supplier_type'], unique=False)
    op.create_index('idx_suppliers_status', 'suppliers', ['status'], unique=False)
    op.drop_constraint(None, 'roles', type_='foreignkey')
    op.drop_index('idx_role_template', table_name='roles')
    op.drop_index('idx_role_parent', table_name='roles')
    op.drop_index('idx_role_can_delete', table_name='roles')
    op.drop_index('idx_role_hierarchy_parent', table_name='role_hierarchy')
    op.drop_index('idx_role_hierarchy_child', table_name='role_hierarchy')
    op.drop_index(op.f('ix_rbac_audit_logs_is_active'), table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_user', table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_timestamp', table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_success', table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_ip', table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_entity_type', table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_entity_id', table_name='rbac_audit_logs')
    op.drop_index('idx_rbac_audit_action', table_name='rbac_audit_logs')
    op.drop_constraint(None, 'permissions', type_='foreignkey')
    op.drop_index(op.f('ix_permissions_code'), table_name='permissions')
    op.drop_index('idx_permission_risk_level', table_name='permissions')
    op.drop_index('idx_permission_requires_approval', table_name='permissions')
    op.drop_index('idx_permission_code', table_name='permissions')
    op.drop_index('idx_permission_category', table_name='permissions')
    op.drop_index(op.f('ix_permission_dependencies_is_active'), table_name='permission_dependencies')
    op.drop_index('idx_permission_deps_perm', table_name='permission_dependencies')
    op.drop_index('idx_permission_deps_depends', table_name='permission_dependencies')
    op.drop_index(op.f('ix_permission_categories_is_active'), table_name='permission_categories')
    op.drop_index(op.f('ix_permission_categories_code'), table_name='permission_categories')
    op.drop_index('idx_permission_category_order', table_name='permission_categories')
    op.drop_index('idx_permission_category_name', table_name='permission_categories')
    op.drop_index('idx_permission_category_code', table_name='permission_categories')
    op.create_index('idx_customers_type_status', 'customers', ['customer_type', 'is_active'], unique=False)
    op.create_index('idx_customers_type', 'customers', ['customer_type'], unique=False)
    op.create_index('idx_customers_status', 'customers', ['is_active'], unique=False)
    op.create_index('idx_customers_phone', 'customers', ['phone_number'], unique=False)
    op.create_index('idx_customers_email', 'customers', ['email'], unique=False)
    op.create_index('idx_customers_created', 'customers', ['created_at'], unique=False)
    op.create_table('analytics_reports',
    sa.Column('report_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('report_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('report_format', sa.VARCHAR(length=10), nullable=False),
    sa.Column('report_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('filters', sqlite.JSON(), nullable=True),
    sa.Column('parameters', sqlite.JSON(), nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('file_size', sa.VARCHAR(length=20), nullable=True),
    sa.Column('generated_by', sa.CHAR(length=36), nullable=False),
    sa.Column('generated_at', sa.DATETIME(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('report_metadata', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_analytics_reports_is_active', 'analytics_reports', ['is_active'], unique=False)
    op.create_index('idx_analytics_report_type', 'analytics_reports', ['report_type'], unique=False)
    op.create_index('idx_analytics_report_status', 'analytics_reports', ['report_status'], unique=False)
    op.create_index('idx_analytics_report_generated_by', 'analytics_reports', ['generated_by'], unique=False)
    op.create_index('idx_analytics_report_generated_at', 'analytics_reports', ['generated_at'], unique=False)
    op.create_index('idx_analytics_report_date_range', 'analytics_reports', ['start_date', 'end_date'], unique=False)
    op.create_table('items',
    sa.Column('item_code', sa.VARCHAR(length=50), nullable=False),
    sa.Column('item_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('item_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('item_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('brand_id', sa.CHAR(length=36), nullable=True),
    sa.Column('category_id', sa.CHAR(length=36), nullable=True),
    sa.Column('unit_of_measurement_id', sa.CHAR(length=36), nullable=True),
    sa.Column('supplier_id', sa.CHAR(length=36), nullable=True),
    sa.Column('purchase_price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('rental_price_per_day', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('rental_price_per_week', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('rental_price_per_month', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('sale_price', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('minimum_rental_days', sa.VARCHAR(length=10), nullable=True),
    sa.Column('maximum_rental_days', sa.VARCHAR(length=10), nullable=True),
    sa.Column('security_deposit', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('specifications', sa.TEXT(), nullable=True),
    sa.Column('model_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('serial_number_required', sa.BOOLEAN(), nullable=False),
    sa.Column('warranty_period_days', sa.VARCHAR(length=10), nullable=False),
    sa.Column('reorder_level', sa.VARCHAR(length=10), nullable=False),
    sa.Column('reorder_quantity', sa.VARCHAR(length=10), nullable=False),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_items_item_code', 'items', ['item_code'], unique=1)
    op.create_index('idx_item_type', 'items', ['item_type'], unique=False)
    op.create_index('idx_item_supplier', 'items', ['supplier_id'], unique=False)
    op.create_index('idx_item_status', 'items', ['item_status'], unique=False)
    op.create_index('idx_item_name', 'items', ['item_name'], unique=False)
    op.create_index('idx_item_code', 'items', ['item_code'], unique=False)
    op.create_index('idx_item_category', 'items', ['category_id'], unique=False)
    op.create_index('idx_item_brand', 'items', ['brand_id'], unique=False)
    op.create_table('rental_returns',
    sa.Column('rental_transaction_id', sa.CHAR(length=36), nullable=False),
    sa.Column('return_date', sa.DATE(), nullable=False),
    sa.Column('return_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('return_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('return_location_id', sa.CHAR(length=36), nullable=True),
    sa.Column('expected_return_date', sa.DATE(), nullable=True),
    sa.Column('processed_by', sa.CHAR(length=36), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('total_late_fee', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('total_damage_fee', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('total_deposit_release', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('total_refund_amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['rental_transaction_id'], ['transaction_headers.id'], ),
    sa.ForeignKeyConstraint(['return_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_rental_returns_is_active', 'rental_returns', ['is_active'], unique=False)
    op.create_index('idx_rental_return_type', 'rental_returns', ['return_type'], unique=False)
    op.create_index('idx_rental_return_transaction', 'rental_returns', ['rental_transaction_id'], unique=False)
    op.create_index('idx_rental_return_status', 'rental_returns', ['return_status'], unique=False)
    op.create_index('idx_rental_return_processed_by', 'rental_returns', ['processed_by'], unique=False)
    op.create_index('idx_rental_return_location', 'rental_returns', ['return_location_id'], unique=False)
    op.create_index('idx_rental_return_expected_date', 'rental_returns', ['expected_return_date'], unique=False)
    op.create_index('idx_rental_return_date', 'rental_returns', ['return_date'], unique=False)
    op.create_table('inventory_units',
    sa.Column('item_id', sa.CHAR(length=36), nullable=False),
    sa.Column('location_id', sa.CHAR(length=36), nullable=False),
    sa.Column('unit_code', sa.VARCHAR(length=50), nullable=False),
    sa.Column('serial_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('condition', sa.VARCHAR(length=20), nullable=False),
    sa.Column('purchase_date', sa.DATETIME(), nullable=True),
    sa.Column('purchase_price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('warranty_expiry', sa.DATETIME(), nullable=True),
    sa.Column('last_maintenance_date', sa.DATETIME(), nullable=True),
    sa.Column('next_maintenance_date', sa.DATETIME(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_inventory_units_unit_code', 'inventory_units', ['unit_code'], unique=1)
    op.create_index('ix_inventory_units_is_active', 'inventory_units', ['is_active'], unique=False)
    op.create_index('idx_inventory_unit_status', 'inventory_units', ['status'], unique=False)
    op.create_index('idx_inventory_unit_serial', 'inventory_units', ['serial_number'], unique=False)
    op.create_index('idx_inventory_unit_location', 'inventory_units', ['location_id'], unique=False)
    op.create_index('idx_inventory_unit_item', 'inventory_units', ['item_id'], unique=False)
    op.create_index('idx_inventory_unit_condition', 'inventory_units', ['condition'], unique=False)
    op.create_index('idx_inventory_unit_code', 'inventory_units', ['unit_code'], unique=False)
    op.create_table('business_metrics',
    sa.Column('metric_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('metric_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('current_value', sa.NUMERIC(precision=15, scale=4), nullable=False),
    sa.Column('previous_value', sa.NUMERIC(precision=15, scale=4), nullable=True),
    sa.Column('target_value', sa.NUMERIC(precision=15, scale=4), nullable=True),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=True),
    sa.Column('calculation_method', sa.TEXT(), nullable=True),
    sa.Column('tracked_date', sa.DATETIME(), nullable=False),
    sa.Column('metric_metadata', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_business_metrics_is_active', 'business_metrics', ['is_active'], unique=False)
    op.create_index('idx_business_metric_type', 'business_metrics', ['metric_type'], unique=False)
    op.create_index('idx_business_metric_tracked_date', 'business_metrics', ['tracked_date'], unique=False)
    op.create_index('idx_business_metric_name_date', 'business_metrics', ['metric_name', 'tracked_date'], unique=False)
    op.create_index('idx_business_metric_name', 'business_metrics', ['metric_name'], unique=False)
    op.create_index('idx_business_metric_category', 'business_metrics', ['category'], unique=False)
    op.create_table('system_backups',
    sa.Column('backup_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('backup_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('backup_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('backup_path', sa.VARCHAR(length=500), nullable=True),
    sa.Column('backup_size', sa.VARCHAR(length=20), nullable=True),
    sa.Column('started_by', sa.CHAR(length=36), nullable=False),
    sa.Column('started_at', sa.DATETIME(), nullable=False),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('retention_days', sa.VARCHAR(length=10), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('backup_metadata', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_system_backups_is_active', 'system_backups', ['is_active'], unique=False)
    op.create_index('idx_system_backup_type', 'system_backups', ['backup_type'], unique=False)
    op.create_index('idx_system_backup_status', 'system_backups', ['backup_status'], unique=False)
    op.create_index('idx_system_backup_started_by', 'system_backups', ['started_by'], unique=False)
    op.create_index('idx_system_backup_started_at', 'system_backups', ['started_at'], unique=False)
    op.create_index('idx_system_backup_name', 'system_backups', ['backup_name'], unique=False)
    op.create_index('idx_system_backup_completed_at', 'system_backups', ['completed_at'], unique=False)
    op.create_table('transaction_lines',
    sa.Column('transaction_id', sa.CHAR(length=36), nullable=False),
    sa.Column('line_number', sa.INTEGER(), nullable=False),
    sa.Column('line_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('item_id', sa.CHAR(length=36), nullable=True),
    sa.Column('inventory_unit_id', sa.CHAR(length=36), nullable=True),
    sa.Column('description', sa.VARCHAR(length=500), nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('discount_percentage', sa.NUMERIC(precision=5, scale=2), nullable=False),
    sa.Column('discount_amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('tax_rate', sa.NUMERIC(precision=5, scale=2), nullable=False),
    sa.Column('tax_amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('line_total', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('rental_period_value', sa.INTEGER(), nullable=True),
    sa.Column('rental_period_unit', sa.VARCHAR(length=10), nullable=True),
    sa.Column('rental_start_date', sa.DATE(), nullable=True),
    sa.Column('rental_end_date', sa.DATE(), nullable=True),
    sa.Column('returned_quantity', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('return_date', sa.DATE(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['inventory_unit_id'], ['inventory_units.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction_headers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transaction_lines_is_active', 'transaction_lines', ['is_active'], unique=False)
    op.create_index('idx_transaction_line_type', 'transaction_lines', ['line_type'], unique=False)
    op.create_index('idx_transaction_line_transaction', 'transaction_lines', ['transaction_id'], unique=False)
    op.create_index('idx_transaction_line_rental_dates', 'transaction_lines', ['rental_start_date', 'rental_end_date'], unique=False)
    op.create_index('idx_transaction_line_number', 'transaction_lines', ['transaction_id', 'line_number'], unique=False)
    op.create_index('idx_transaction_line_item', 'transaction_lines', ['item_id'], unique=False)
    op.create_index('idx_transaction_line_inventory_unit', 'transaction_lines', ['inventory_unit_id'], unique=False)
    op.create_table('system_alerts',
    sa.Column('alert_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('alert_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('severity', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('message', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('source', sa.VARCHAR(length=100), nullable=True),
    sa.Column('trigger_condition', sa.TEXT(), nullable=True),
    sa.Column('resolution_notes', sa.TEXT(), nullable=True),
    sa.Column('acknowledged_by', sa.CHAR(length=36), nullable=True),
    sa.Column('acknowledged_at', sa.DATETIME(), nullable=True),
    sa.Column('resolved_by', sa.CHAR(length=36), nullable=True),
    sa.Column('resolved_at', sa.DATETIME(), nullable=True),
    sa.Column('alert_metadata', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_alert_type', 'system_alerts', ['alert_type'], unique=False)
    op.create_index('idx_system_alert_status', 'system_alerts', ['status'], unique=False)
    op.create_index('idx_system_alert_source', 'system_alerts', ['source'], unique=False)
    op.create_index('idx_system_alert_severity_status', 'system_alerts', ['severity', 'status'], unique=False)
    op.create_index('idx_system_alert_severity', 'system_alerts', ['severity'], unique=False)
    op.create_index('idx_system_alert_name', 'system_alerts', ['alert_name'], unique=False)
    op.create_index('idx_system_alert_created_at', 'system_alerts', ['created_at'], unique=False)
    op.create_table('inspection_reports',
    sa.Column('rental_return_id', sa.CHAR(length=36), nullable=False),
    sa.Column('inventory_unit_id', sa.CHAR(length=36), nullable=False),
    sa.Column('inspected_by', sa.CHAR(length=36), nullable=False),
    sa.Column('inspection_date', sa.DATETIME(), nullable=False),
    sa.Column('inspection_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('damage_level', sa.VARCHAR(length=20), nullable=False),
    sa.Column('damage_description', sa.TEXT(), nullable=True),
    sa.Column('repair_cost_estimate', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('replacement_cost_estimate', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('inspection_notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['inventory_unit_id'], ['inventory_units.id'], ),
    sa.ForeignKeyConstraint(['rental_return_id'], ['rental_returns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_inspection_reports_is_active', 'inspection_reports', ['is_active'], unique=False)
    op.create_index('idx_inspection_report_status', 'inspection_reports', ['inspection_status'], unique=False)
    op.create_index('idx_inspection_report_return', 'inspection_reports', ['rental_return_id'], unique=False)
    op.create_index('idx_inspection_report_inventory_unit', 'inspection_reports', ['inventory_unit_id'], unique=False)
    op.create_index('idx_inspection_report_inspected_by', 'inspection_reports', ['inspected_by'], unique=False)
    op.create_index('idx_inspection_report_date', 'inspection_reports', ['inspection_date'], unique=False)
    op.create_index('idx_inspection_report_damage_level', 'inspection_reports', ['damage_level'], unique=False)
    op.create_table('audit_logs',
    sa.Column('user_id', sa.CHAR(length=36), nullable=True),
    sa.Column('action', sa.VARCHAR(length=50), nullable=False),
    sa.Column('entity_type', sa.VARCHAR(length=100), nullable=True),
    sa.Column('entity_id', sa.CHAR(length=36), nullable=True),
    sa.Column('old_values', sqlite.JSON(), nullable=True),
    sa.Column('new_values', sqlite.JSON(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('success', sa.BOOLEAN(), nullable=False),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('audit_metadata', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_audit_logs_is_active', 'audit_logs', ['is_active'], unique=False)
    op.create_index('idx_audit_log_user_id', 'audit_logs', ['user_id'], unique=False)
    op.create_index('idx_audit_log_success', 'audit_logs', ['success'], unique=False)
    op.create_index('idx_audit_log_session_id', 'audit_logs', ['session_id'], unique=False)
    op.create_index('idx_audit_log_ip_address', 'audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_audit_log_entity_type', 'audit_logs', ['entity_type'], unique=False)
    op.create_index('idx_audit_log_entity_id', 'audit_logs', ['entity_id'], unique=False)
    op.create_index('idx_audit_log_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_log_action', 'audit_logs', ['action'], unique=False)
    op.create_table('system_settings',
    sa.Column('setting_key', sa.VARCHAR(length=100), nullable=False),
    sa.Column('setting_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('setting_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('setting_category', sa.VARCHAR(length=20), nullable=False),
    sa.Column('setting_value', sa.TEXT(), nullable=True),
    sa.Column('default_value', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_system', sa.BOOLEAN(), nullable=False),
    sa.Column('is_sensitive', sa.BOOLEAN(), nullable=False),
    sa.Column('validation_rules', sqlite.JSON(), nullable=True),
    sa.Column('display_order', sa.VARCHAR(length=10), nullable=False),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_system_settings_setting_key', 'system_settings', ['setting_key'], unique=1)
    op.create_index('ix_system_settings_is_active', 'system_settings', ['is_active'], unique=False)
    op.create_index('idx_system_setting_type', 'system_settings', ['setting_type'], unique=False)
    op.create_index('idx_system_setting_system', 'system_settings', ['is_system'], unique=False)
    op.create_index('idx_system_setting_key', 'system_settings', ['setting_key'], unique=False)
    op.create_index('idx_system_setting_display_order', 'system_settings', ['display_order'], unique=False)
    op.create_index('idx_system_setting_category', 'system_settings', ['setting_category'], unique=False)
    op.create_table('rental_return_lines',
    sa.Column('rental_return_id', sa.CHAR(length=36), nullable=False),
    sa.Column('inventory_unit_id', sa.CHAR(length=36), nullable=False),
    sa.Column('original_quantity', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('returned_quantity', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('damage_level', sa.VARCHAR(length=20), nullable=False),
    sa.Column('line_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('late_fee', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('damage_fee', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['inventory_unit_id'], ['inventory_units.id'], ),
    sa.ForeignKeyConstraint(['rental_return_id'], ['rental_returns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_rental_return_lines_is_active', 'rental_return_lines', ['is_active'], unique=False)
    op.create_index('idx_rental_return_line_status', 'rental_return_lines', ['line_status'], unique=False)
    op.create_index('idx_rental_return_line_return', 'rental_return_lines', ['rental_return_id'], unique=False)
    op.create_index('idx_rental_return_line_inventory_unit', 'rental_return_lines', ['inventory_unit_id'], unique=False)
    op.create_index('idx_rental_return_line_damage_level', 'rental_return_lines', ['damage_level'], unique=False)
    op.create_table('stock_levels',
    sa.Column('item_id', sa.CHAR(length=36), nullable=False),
    sa.Column('location_id', sa.CHAR(length=36), nullable=False),
    sa.Column('quantity_on_hand', sa.VARCHAR(length=10), nullable=False),
    sa.Column('quantity_available', sa.VARCHAR(length=10), nullable=False),
    sa.Column('quantity_reserved', sa.VARCHAR(length=10), nullable=False),
    sa.Column('quantity_on_order', sa.VARCHAR(length=10), nullable=False),
    sa.Column('minimum_level', sa.VARCHAR(length=10), nullable=False),
    sa.Column('maximum_level', sa.VARCHAR(length=10), nullable=False),
    sa.Column('reorder_point', sa.VARCHAR(length=10), nullable=False),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_stock_levels_is_active', 'stock_levels', ['is_active'], unique=False)
    op.create_index('idx_stock_level_location', 'stock_levels', ['location_id'], unique=False)
    op.create_index('idx_stock_level_item_location', 'stock_levels', ['item_id', 'location_id'], unique=1)
    op.create_index('idx_stock_level_item', 'stock_levels', ['item_id'], unique=False)
    op.create_table('transaction_headers',
    sa.Column('transaction_number', sa.VARCHAR(length=50), nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('transaction_date', sa.DATETIME(), nullable=False),
    sa.Column('customer_id', sa.CHAR(length=36), nullable=False),
    sa.Column('location_id', sa.CHAR(length=36), nullable=False),
    sa.Column('sales_person_id', sa.CHAR(length=36), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('payment_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('subtotal', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('discount_amount', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('tax_amount', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('paid_amount', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('deposit_amount', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('reference_transaction_id', sa.CHAR(length=36), nullable=True),
    sa.Column('rental_start_date', sa.DATE(), nullable=True),
    sa.Column('rental_end_date', sa.DATE(), nullable=True),
    sa.Column('actual_return_date', sa.DATE(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=20), nullable=True),
    sa.Column('payment_reference', sa.VARCHAR(length=100), nullable=True),
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['reference_transaction_id'], ['transaction_headers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transaction_headers_transaction_number', 'transaction_headers', ['transaction_number'], unique=1)
    op.create_index('ix_transaction_headers_is_active', 'transaction_headers', ['is_active'], unique=False)
    op.create_index('idx_transaction_type', 'transaction_headers', ['transaction_type'], unique=False)
    op.create_index('idx_transaction_status', 'transaction_headers', ['status'], unique=False)
    op.create_index('idx_transaction_sales_person', 'transaction_headers', ['sales_person_id'], unique=False)
    op.create_index('idx_transaction_rental_dates', 'transaction_headers', ['rental_start_date', 'rental_end_date'], unique=False)
    op.create_index('idx_transaction_payment_status', 'transaction_headers', ['payment_status'], unique=False)
    op.create_index('idx_transaction_number', 'transaction_headers', ['transaction_number'], unique=False)
    op.create_index('idx_transaction_location', 'transaction_headers', ['location_id'], unique=False)
    op.create_index('idx_transaction_date', 'transaction_headers', ['transaction_date'], unique=False)
    op.create_index('idx_transaction_customer', 'transaction_headers', ['customer_id'], unique=False)
    op.drop_index(op.f('ix_permission_notifications_is_active'), table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_user', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_type', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_related_user', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_read', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_permission', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_days_ahead', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_created', table_name='permission_notifications')
    op.drop_index('idx_permission_notifications_channel', table_name='permission_notifications')
    op.drop_table('permission_notifications')
    op.drop_index(op.f('ix_notification_preferences_is_active'), table_name='notification_preferences')
    op.drop_index('idx_notification_prefs_user', table_name='notification_preferences')
    op.drop_index('idx_notification_prefs_in_app', table_name='notification_preferences')
    op.drop_index('idx_notification_prefs_email', table_name='notification_preferences')
    op.drop_index('idx_notification_prefs_digest', table_name='notification_preferences')
    op.drop_table('notification_preferences')
    # ### end Alembic commands ###