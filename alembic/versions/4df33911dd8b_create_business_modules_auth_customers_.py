"""Create business modules - auth, customers, suppliers, locations

Revision ID: 4df33911dd8b
Revises: 6535bfe5de16
Create Date: 2025-07-09 13:10:01.518732

"""
from alembic import op
import sqlalchemy as sa
from app.db.base import UUIDType


# revision identifiers, used by Alembic.
revision = '4df33911dd8b'
down_revision = '6535bfe5de16'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Brand name'),
    sa.Column('code', sa.String(length=20), nullable=True, comment='Unique brand code'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.Column('description', sa.String(length=1000), nullable=True, comment='Description'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_brand_code_active', 'brands', ['code', 'is_active'], unique=False)
    op.create_index('idx_brand_name_active', 'brands', ['name', 'is_active'], unique=False)
    op.create_index(op.f('ix_brands_code'), 'brands', ['code'], unique=True)
    op.create_index(op.f('ix_brands_is_active'), 'brands', ['is_active'], unique=False)
    op.create_index(op.f('ix_brands_name'), 'brands', ['name'], unique=True)
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Category name'),
    sa.Column('parent_category_id', UUIDType(length=36), nullable=True, comment='Parent category ID'),
    sa.Column('category_path', sa.String(length=500), nullable=False, comment='Full category path'),
    sa.Column('category_level', sa.Integer(), nullable=False, comment='Hierarchy level'),
    sa.Column('display_order', sa.Integer(), nullable=False, comment='Display order within parent'),
    sa.Column('is_leaf', sa.Boolean(), nullable=False, comment='True if category has no children'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.ForeignKeyConstraint(['parent_category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_category_active_leaf', 'categories', ['is_active', 'is_leaf'], unique=False)
    op.create_index('idx_category_display_order', 'categories', ['display_order'], unique=False)
    op.create_index('idx_category_level', 'categories', ['category_level'], unique=False)
    op.create_index('idx_category_parent', 'categories', ['parent_category_id'], unique=False)
    op.create_index('idx_category_parent_order', 'categories', ['parent_category_id', 'display_order'], unique=False)
    op.create_index('idx_category_path', 'categories', ['category_path'], unique=False)
    op.create_index(op.f('ix_categories_category_path'), 'categories', ['category_path'], unique=False)
    op.create_index(op.f('ix_categories_is_active'), 'categories', ['is_active'], unique=False)
    op.create_index('uk_category_name_parent', 'categories', ['name', 'parent_category_id'], unique=True)
    op.create_table('customers',
    sa.Column('customer_code', sa.String(length=20), nullable=False, comment='Unique customer code'),
    sa.Column('customer_type', sa.String(length=20), nullable=False, comment='Customer type'),
    sa.Column('business_name', sa.String(length=200), nullable=True, comment='Company name'),
    sa.Column('first_name', sa.String(length=100), nullable=True, comment='First name'),
    sa.Column('last_name', sa.String(length=100), nullable=True, comment='Last name'),
    sa.Column('email', sa.String(length=255), nullable=True, comment='Email address'),
    sa.Column('phone_number', sa.String(length=20), nullable=True, comment='Phone number'),
    sa.Column('address', sa.Text(), nullable=True, comment='Street address'),
    sa.Column('city', sa.String(length=100), nullable=True, comment='City'),
    sa.Column('state', sa.String(length=100), nullable=True, comment='State/Province'),
    sa.Column('country', sa.String(length=100), nullable=True, comment='Country'),
    sa.Column('postal_code', sa.String(length=20), nullable=True, comment='Postal/ZIP code'),
    sa.Column('tax_id', sa.String(length=50), nullable=True, comment='GST/Tax ID'),
    sa.Column('customer_tier', sa.String(length=20), nullable=False, comment='Customer tier'),
    sa.Column('credit_limit', sa.Numeric(precision=10, scale=2), nullable=False, comment='Credit limit'),
    sa.Column('blacklist_status', sa.String(length=20), nullable=False, comment='Blacklist status'),
    sa.Column('lifetime_value', sa.Numeric(precision=12, scale=2), nullable=False, comment='Total purchase value'),
    sa.Column('last_transaction_date', sa.DateTime(), nullable=True, comment='Last transaction date'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_customer_blacklist', 'customers', ['blacklist_status'], unique=False)
    op.create_index('idx_customer_business_name', 'customers', ['business_name'], unique=False)
    op.create_index('idx_customer_city', 'customers', ['city'], unique=False)
    op.create_index('idx_customer_code', 'customers', ['customer_code'], unique=False)
    op.create_index('idx_customer_country', 'customers', ['country'], unique=False)
    op.create_index('idx_customer_email', 'customers', ['email'], unique=False)
    op.create_index('idx_customer_name', 'customers', ['first_name', 'last_name'], unique=False)
    op.create_index('idx_customer_phone', 'customers', ['phone_number'], unique=False)
    op.create_index('idx_customer_state', 'customers', ['state'], unique=False)
    op.create_index('idx_customer_tier', 'customers', ['customer_tier'], unique=False)
    op.create_index('idx_customer_type', 'customers', ['customer_type'], unique=False)
    op.create_index(op.f('ix_customers_customer_code'), 'customers', ['customer_code'], unique=True)
    op.create_index(op.f('ix_customers_is_active'), 'customers', ['is_active'], unique=False)
    op.create_table('locations',
    sa.Column('location_code', sa.String(length=20), nullable=False, comment='Unique location code'),
    sa.Column('location_name', sa.String(length=100), nullable=False, comment='Location name'),
    sa.Column('location_type', sa.String(length=20), nullable=False, comment='Location type'),
    sa.Column('address', sa.Text(), nullable=False, comment='Street address'),
    sa.Column('city', sa.String(length=100), nullable=False, comment='City'),
    sa.Column('state', sa.String(length=100), nullable=False, comment='State/Province'),
    sa.Column('country', sa.String(length=100), nullable=False, comment='Country'),
    sa.Column('postal_code', sa.String(length=20), nullable=True, comment='Postal/ZIP code'),
    sa.Column('contact_number', sa.String(length=20), nullable=True, comment='Phone number'),
    sa.Column('email', sa.String(length=255), nullable=True, comment='Email address'),
    sa.Column('manager_user_id', UUIDType(length=36), nullable=True, comment='Manager user ID'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_location_city', 'locations', ['city'], unique=False)
    op.create_index('idx_location_code', 'locations', ['location_code'], unique=False)
    op.create_index('idx_location_country', 'locations', ['country'], unique=False)
    op.create_index('idx_location_manager', 'locations', ['manager_user_id'], unique=False)
    op.create_index('idx_location_name', 'locations', ['location_name'], unique=False)
    op.create_index('idx_location_state', 'locations', ['state'], unique=False)
    op.create_index('idx_location_type', 'locations', ['location_type'], unique=False)
    op.create_index(op.f('ix_locations_is_active'), 'locations', ['is_active'], unique=False)
    op.create_index(op.f('ix_locations_location_code'), 'locations', ['location_code'], unique=True)
    op.create_table('permissions',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Permission name'),
    sa.Column('description', sa.Text(), nullable=True, comment='Permission description'),
    sa.Column('resource', sa.String(length=50), nullable=False, comment='Resource name'),
    sa.Column('action', sa.String(length=50), nullable=False, comment='Action name'),
    sa.Column('is_system_permission', sa.Boolean(), nullable=False, comment='System permission flag'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_permission_action', 'permissions', ['action'], unique=False)
    op.create_index('idx_permission_name', 'permissions', ['name'], unique=False)
    op.create_index('idx_permission_resource', 'permissions', ['resource'], unique=False)
    op.create_index('idx_permission_resource_action', 'permissions', ['resource', 'action'], unique=False)
    op.create_index('idx_permission_system', 'permissions', ['is_system_permission'], unique=False)
    op.create_index(op.f('ix_permissions_is_active'), 'permissions', ['is_active'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_table('roles',
    sa.Column('name', sa.String(length=50), nullable=False, comment='Role name'),
    sa.Column('description', sa.Text(), nullable=True, comment='Role description'),
    sa.Column('is_system_role', sa.Boolean(), nullable=False, comment='System role flag'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_role_name', 'roles', ['name'], unique=False)
    op.create_index('idx_role_system', 'roles', ['is_system_role'], unique=False)
    op.create_index(op.f('ix_roles_is_active'), 'roles', ['is_active'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('suppliers',
    sa.Column('supplier_code', sa.String(length=50), nullable=False, comment='Unique supplier code'),
    sa.Column('company_name', sa.String(length=255), nullable=False, comment='Supplier company name'),
    sa.Column('supplier_type', sa.String(length=50), nullable=False, comment='Type of supplier'),
    sa.Column('contact_person', sa.String(length=255), nullable=True, comment='Primary contact person'),
    sa.Column('email', sa.String(length=255), nullable=True, comment='Supplier email address'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='Supplier phone number'),
    sa.Column('mobile', sa.String(length=50), nullable=True, comment='Supplier mobile number'),
    sa.Column('address_line1', sa.String(length=255), nullable=True, comment='Primary address line'),
    sa.Column('address_line2', sa.String(length=255), nullable=True, comment='Secondary address line'),
    sa.Column('city', sa.String(length=100), nullable=True, comment='City'),
    sa.Column('state', sa.String(length=100), nullable=True, comment='State/Province'),
    sa.Column('postal_code', sa.String(length=20), nullable=True, comment='Postal/ZIP code'),
    sa.Column('country', sa.String(length=100), nullable=True, comment='Country'),
    sa.Column('tax_id', sa.String(length=50), nullable=True, comment='Tax identification number'),
    sa.Column('payment_terms', sa.String(length=20), nullable=False, comment='Payment terms'),
    sa.Column('credit_limit', sa.Numeric(precision=12, scale=2), nullable=False, comment='Credit limit amount'),
    sa.Column('supplier_tier', sa.String(length=20), nullable=False, comment='Supplier tier'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Supplier status'),
    sa.Column('quality_rating', sa.Numeric(precision=3, scale=2), nullable=False, comment='Quality rating (0-5)'),
    sa.Column('delivery_rating', sa.Numeric(precision=3, scale=2), nullable=False, comment='Delivery rating (0-5)'),
    sa.Column('average_delivery_days', sa.Integer(), nullable=False, comment='Average delivery time in days'),
    sa.Column('total_orders', sa.Integer(), nullable=False, comment='Total number of orders'),
    sa.Column('total_spend', sa.Numeric(precision=15, scale=2), nullable=False, comment='Total amount spent'),
    sa.Column('last_order_date', sa.DateTime(), nullable=True, comment='Date of last order'),
    sa.Column('contract_start_date', sa.DateTime(), nullable=True, comment='Contract start date'),
    sa.Column('contract_end_date', sa.DateTime(), nullable=True, comment='Contract end date'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes'),
    sa.Column('website', sa.String(length=255), nullable=True, comment='Supplier website'),
    sa.Column('account_manager', sa.String(length=255), nullable=True, comment='Account manager name'),
    sa.Column('preferred_payment_method', sa.String(length=50), nullable=True, comment='Preferred payment method'),
    sa.Column('insurance_expiry', sa.DateTime(), nullable=True, comment='Insurance expiry date'),
    sa.Column('certifications', sa.Text(), nullable=True, comment='Certifications held'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_supplier_code', 'suppliers', ['supplier_code'], unique=False)
    op.create_index('idx_supplier_company_name', 'suppliers', ['company_name'], unique=False)
    op.create_index('idx_supplier_contract_dates', 'suppliers', ['contract_start_date', 'contract_end_date'], unique=False)
    op.create_index('idx_supplier_email', 'suppliers', ['email'], unique=False)
    op.create_index('idx_supplier_last_order', 'suppliers', ['last_order_date'], unique=False)
    op.create_index('idx_supplier_payment_terms', 'suppliers', ['payment_terms'], unique=False)
    op.create_index('idx_supplier_ratings', 'suppliers', ['quality_rating', 'delivery_rating'], unique=False)
    op.create_index('idx_supplier_status', 'suppliers', ['status'], unique=False)
    op.create_index('idx_supplier_tier', 'suppliers', ['supplier_tier'], unique=False)
    op.create_index('idx_supplier_type', 'suppliers', ['supplier_type'], unique=False)
    op.create_index(op.f('ix_suppliers_company_name'), 'suppliers', ['company_name'], unique=False)
    op.create_index(op.f('ix_suppliers_email'), 'suppliers', ['email'], unique=False)
    op.create_index(op.f('ix_suppliers_is_active'), 'suppliers', ['is_active'], unique=False)
    op.create_index(op.f('ix_suppliers_supplier_code'), 'suppliers', ['supplier_code'], unique=True)
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False, comment='Unique username'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='User email address'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='Hashed password'),
    sa.Column('first_name', sa.String(length=100), nullable=False, comment="User's first name"),
    sa.Column('last_name', sa.String(length=100), nullable=False, comment="User's last name"),
    sa.Column('phone_number', sa.String(length=20), nullable=True, comment="User's phone number"),
    sa.Column('status', sa.String(length=20), nullable=False, comment='User status'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='Last login timestamp'),
    sa.Column('failed_login_attempts', sa.String(length=10), nullable=False, comment='Failed login attempts'),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True, comment='Password reset token'),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True, comment='Password reset token expiration'),
    sa.Column('id', UUIDType(length=36), nullable=False, comment='Primary key'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.String(length=255), nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.String(length=255), nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.String(length=255), nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_last_login', 'users', ['last_login'], unique=False)
    op.create_index('idx_user_status', 'users', ['status'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('role_permissions',
    sa.Column('role_id', UUIDType(length=36), nullable=False),
    sa.Column('permission_id', UUIDType(length=36), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_index('idx_role_permissions_permission', 'role_permissions', ['permission_id'], unique=False)
    op.create_index('idx_role_permissions_role', 'role_permissions', ['role_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', UUIDType(length=36), nullable=False),
    sa.Column('role_id', UUIDType(length=36), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_index('idx_user_roles_role', 'user_roles', ['role_id'], unique=False)
    op.create_index('idx_user_roles_user', 'user_roles', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_roles_user', table_name='user_roles')
    op.drop_index('idx_user_roles_role', table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index('idx_role_permissions_role', table_name='role_permissions')
    op.drop_index('idx_role_permissions_permission', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_status', table_name='users')
    op.drop_index('idx_user_last_login', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_suppliers_supplier_code'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_is_active'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_email'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_company_name'), table_name='suppliers')
    op.drop_index('idx_supplier_type', table_name='suppliers')
    op.drop_index('idx_supplier_tier', table_name='suppliers')
    op.drop_index('idx_supplier_status', table_name='suppliers')
    op.drop_index('idx_supplier_ratings', table_name='suppliers')
    op.drop_index('idx_supplier_payment_terms', table_name='suppliers')
    op.drop_index('idx_supplier_last_order', table_name='suppliers')
    op.drop_index('idx_supplier_email', table_name='suppliers')
    op.drop_index('idx_supplier_contract_dates', table_name='suppliers')
    op.drop_index('idx_supplier_company_name', table_name='suppliers')
    op.drop_index('idx_supplier_code', table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_is_active'), table_name='roles')
    op.drop_index('idx_role_system', table_name='roles')
    op.drop_index('idx_role_name', table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_is_active'), table_name='permissions')
    op.drop_index('idx_permission_system', table_name='permissions')
    op.drop_index('idx_permission_resource_action', table_name='permissions')
    op.drop_index('idx_permission_resource', table_name='permissions')
    op.drop_index('idx_permission_name', table_name='permissions')
    op.drop_index('idx_permission_action', table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_locations_location_code'), table_name='locations')
    op.drop_index(op.f('ix_locations_is_active'), table_name='locations')
    op.drop_index('idx_location_type', table_name='locations')
    op.drop_index('idx_location_state', table_name='locations')
    op.drop_index('idx_location_name', table_name='locations')
    op.drop_index('idx_location_manager', table_name='locations')
    op.drop_index('idx_location_country', table_name='locations')
    op.drop_index('idx_location_code', table_name='locations')
    op.drop_index('idx_location_city', table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_customers_is_active'), table_name='customers')
    op.drop_index(op.f('ix_customers_customer_code'), table_name='customers')
    op.drop_index('idx_customer_type', table_name='customers')
    op.drop_index('idx_customer_tier', table_name='customers')
    op.drop_index('idx_customer_state', table_name='customers')
    op.drop_index('idx_customer_phone', table_name='customers')
    op.drop_index('idx_customer_name', table_name='customers')
    op.drop_index('idx_customer_email', table_name='customers')
    op.drop_index('idx_customer_country', table_name='customers')
    op.drop_index('idx_customer_code', table_name='customers')
    op.drop_index('idx_customer_city', table_name='customers')
    op.drop_index('idx_customer_business_name', table_name='customers')
    op.drop_index('idx_customer_blacklist', table_name='customers')
    op.drop_table('customers')
    op.drop_index('uk_category_name_parent', table_name='categories')
    op.drop_index(op.f('ix_categories_is_active'), table_name='categories')
    op.drop_index(op.f('ix_categories_category_path'), table_name='categories')
    op.drop_index('idx_category_path', table_name='categories')
    op.drop_index('idx_category_parent_order', table_name='categories')
    op.drop_index('idx_category_parent', table_name='categories')
    op.drop_index('idx_category_level', table_name='categories')
    op.drop_index('idx_category_display_order', table_name='categories')
    op.drop_index('idx_category_active_leaf', table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_brands_name'), table_name='brands')
    op.drop_index(op.f('ix_brands_is_active'), table_name='brands')
    op.drop_index(op.f('ix_brands_code'), table_name='brands')
    op.drop_index('idx_brand_name_active', table_name='brands')
    op.drop_index('idx_brand_code_active', table_name='brands')
    op.drop_table('brands')
    # ### end Alembic commands ###